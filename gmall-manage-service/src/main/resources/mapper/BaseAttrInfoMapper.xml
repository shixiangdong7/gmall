<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper SYSTEM "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--namespace:接口全路径-->
<mapper namespace="com.baidu.gmall.manage.mapper.BaseAttrInfoMapper">
    <!--resultMap 返回结果映射
        id:表示唯一编号
        type:结果集的返回数据类型
        autoMapping="true" 自动映射
    -->
    <resultMap id="baseAttrInfoMap" type="com.baidu.gmall.bean.BaseAttrInfo" autoMapping="true">
        <!--表示主键
            property：实体类的属性名
            column：数据库字段名称
        -->
        <id property="id" column="id"></id>
        <!--普通字段-->
        <!--<result property="attrName" column="attr_name"></result>-->
        <!--mybatis 如何配置1：n 的关系
            ofType：当前属性返回的数据类型
        -->
        <collection property="attrValueList" ofType="com.baidu.gmall.bean.BaseAttrValue" autoMapping="true">
            <!--如果有字段重名，应该给字段起别名！-->
            <id property="id" column="attr_value_id"></id>
        </collection>
        <!--多对一-->
        <!--<association property=""></association>-->
    </resultMap>
    <!--id : 方法名称 resultType="" 直接返回的数据类型 resultMap：引用返回的结果集映射-->
    <select id="getBaseAttrInfoListByCatalog3Id" resultMap="baseAttrInfoMap" >
        SELECT
               bai.id,
               bai.attr_name,
               bai.catalog3_id,
               bav.id attr_value_id,
               bav.value_name,
               bav.attr_id
            FROM
               base_attr_info bai
            INNER JOIN base_attr_value bav ON bai.id = bav.attr_id
            WHERE
               catalog3_id = #{0}
    </select>
</mapper>